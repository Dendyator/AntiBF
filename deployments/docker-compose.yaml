services:
  antibruteforce:
    build:
      context: ../
      dockerfile: deployments/build/Dockerfile
    container_name: antibruteforce_service
    volumes:
      - ../configs:/app/configs
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      - CONFIG_PATH=/app/configs/config.yaml
      - DATABASE_URL=postgres://user:password@db:5432/antibruteforce
      - REDIS_URL=redis://redis:6379
    networks:
      - antibruteforce_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: antibruteforce
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../deployments/db-init:/docker-entrypoint-initdb.d
    networks:
      - antibruteforce_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "antibruteforce"]
      interval: 2s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - antibruteforce_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 3s
      retries: 5

networks:
  antibruteforce_network:
    driver: bridge
    name: antibruteforce_network

volumes:
  db_data:
    driver: local